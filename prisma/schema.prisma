// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @unique @default(uuid())
  username     String        @unique
  password     String
  consoles     Console[]
  apps         App[]
  phoneNumbers phoneNumber[]
  ads          Ads[]
}

model Console {
  id            String   @id @unique @default(uuid())
  name          String   @unique
  email         String   @unique
  password      String
  country       String
  userId        String
  status        STATUS   @default(Live)
  createdAt     DateTime @default(now())
  phoneNumberId String   @unique

  phoneNumber phoneNumber @relation(fields: [phoneNumberId], references: [id])
  User        User        @relation(fields: [userId], references: [id])
  apps        App[]
}

model phoneNumber {
  id       String   @id @unique @default(uuid())
  operator OPERATOR
  number   String   @unique
  Console  Console?
  User     User     @relation(fields: [userId], references: [id])
  userId   String
}

model App {
  id          String   @id @unique @default(uuid())
  name        String
  packageName String   @unique
  consoleId   String
  status      STATUS   @default(Live)
  createdAt   DateTime @default(now())
  Console     Console  @relation(fields: [consoleId], references: [id])
  User        User     @relation(fields: [userId], references: [id])
  userId      String
  ads         Ads      @relation(fields: [adsId], references: [id])
  adsId       String   @unique
  Data        Data?    @relation(fields: [dataId], references: [id])
  dataId      String?  @unique
}

model Ads {
  id          String   @id @unique @default(uuid())
  hasUnity    Boolean  @default(false)
  hasAdmob    Boolean  @default(false)
  hasFan      Boolean  @default(false)
  hasApplovin Boolean  @default(false)
  App         App?
  applovin    Applovin @relation(fields: [applovinId], references: [id])
  fan         Fan      @relation(fields: [fanId], references: [id])
  unity       Unity    @relation(fields: [unityId], references: [id])
  admob       Admob    @relation(fields: [admobId], references: [id])
  applovinId  String   @unique
  fanId       String   @unique
  unityId     String   @unique
  admobId     String   @unique
  User        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Applovin {
  id       String  @id @unique @default(uuid())
  rewardId String? @unique
  interId  String? @unique
  bannerId String? @unique
  nativeId String? @unique
  Ads      Ads?
}

model Admob {
  id       String  @id @unique @default(uuid())
  rewardId String? @unique
  interId  String? @unique
  bannerId String? @unique
  nativeId String? @unique
  Ads      Ads?
}

model Fan {
  id       String  @id @unique @default(uuid())
  rewardId String? @unique
  interId  String? @unique
  bannerId String? @unique
  nativeId String? @unique
  Ads      Ads?
}

model Unity {
  id       String  @id @unique @default(uuid())
  rewardId String? @unique
  interId  String? @unique
  bannerId String? @unique
  nativeId String? @unique
  Ads      Ads?
}

model Data {
  id        String    @id @unique @default(uuid())
  subData   SubData[]
  App       App[]
  title     String
  createdAt DateTime  @default(now())
}

model SubData {
  id          String  @id @unique @default(uuid())
  title       String?
  image       String?
  description String
  Data        Data?   @relation(fields: [dataId], references: [id])
  dataId      String?
}

////////////////////////////////////////////
//                ENUMS                   //
////////////////////////////////////////////

enum STATUS {
  Live
  Deleted
}

enum OPERATOR {
  ORANGE
  IAM
  INWI
  UNKOWN
}
